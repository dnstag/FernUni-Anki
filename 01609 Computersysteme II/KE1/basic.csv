Wahr oder falsch?\nUnter der Prozessorarchitektur versteht man den vollständigen inneren Aufbau des Prozessors.;Die Aussage ist falsch. Die Prozessorarchitektur definiert die Grenze zwischen Hardware und Software. Sie umfasst den für den Systemprogrammierer und für den Compiler sichtbaren Teil des Prozessors.
Wahr oder falsch?\nZum Programmiermodell eines Prozessors gehören u.a. der Befehlssatz, das Befehlsformat und die Adressierungsarten.;Die Aussage ist richtig. Zum Programmiermodell eines Prozessors gehören der Befehlssatz, das Befehlsformat, die Adressierungsarten, das Unterbrechungssystem und das Speichermodell.
Wahr oder falsch?\nDie Eigenschaften der Mikroarchitektur werden von der Prozessorarchitektur selbst nicht erfasst und sind deshalb unbedeutend für die Systemsoftware sowie für den Systemprogrammierer.;Die Aussage ist falsch. Die Eigenschaften der Mikroarchitektur werden zwar von der Prozessorarchitektur selbst nicht erfasst, um aber einen effizienten Kode für einen speziellen Prozessor zu erzeugen, wird die Kenntnis der Mikroarchitektureigenschaften von Systemprogrammierern und optimierenden Compilern benötigt.
Wahr oder falsch?\nBei einem Befehlssatz mit Befehlen der Länge [$]n[/$] Bit besitzen die allgemeinen internen Register sowie die effektiven Adressen im Allgemeinen die Breite von [$]n[/$] Bit.;Die Aussage ist richtig. Das Datenformat des Prozessors definiert sich über die allgemeinen internen Register und da diese Register häufig für die Speicheradressierung verwendet werden, ist die Breite der effektiven Adresse meist gleich der Registerbreite.
Wahr oder falsch?\nDas Mooresche Gesetz besagt, dass sich die Taktgeschwindigkeit eines Prozessors ca. alle 18 Monate verdoppelt.;Die Aussage ist falsch. Das Mooresche Gesetz bezieht sich auf die Integrationsdichte, nicht direkt auf die Taktgeschwindigkeit.
Wahr oder falsch?\nBei einem wortadressierten Speicher ist es insbesondere möglich, auf jedes Byte des Adressraums einzeln zuzugreifen.;Die Aussage ist falsch. Dies ist nur bei einem byteadressierbaren Adressraum möglich.
Wahr oder falsch?\nAls effektive Adresse bezeichnet man diejenige Adresse, an der sich das zur Ausführung eines Befehls benötigte Datum tatsächlich befindet.;Die Aussage ist richtig, falls keine virtuelle Speicherverwaltung genutzt wird. Die effektive Adresse bezeichnet die durch die Adressierungsart spezifizierte Adresse. Wird hingegen virtuelle Speicherverwaltung genutzt, dann spezifiziert die effektive Adresse die Adresse innerhalb des Adressraums, muss aber nicht unbedingt identisch mit der physikalischen Adresse im Arbeitsspeicher sein.
Wahr oder falsch?\nDer darstellbare Wertebereich einer IEEE-754-Zahl mit doppelter Genauigkeit (64 Bit) ist doppelt so groß wie der Wertebereich einer IEEE754-Zahl mit einfacher Genauigkeit (32 Bit).;Die Aussage ist falsch. Die doppelte Bitlänge vervielfacht die Anzahl an darstellbaren Werten (grob um den Faktor [$]2^{32}[/$], gegeben durch die zusätzliche Zahl an Bits) und den Wertebereich (grob um den Faktor [$]2^3[/$], wegen des 3 Bit längeren Exponenten).
Wahr oder falsch?\nDie 0-Adress- und die Akkumulatormaschine verwenden für arithmetische Befehle ausschließlich die implizite Adressierung.;Die Aussage ist richtig. Voraussetzung für die Verwendung eines 0-Adress-Formats ist eine Stack-Architektur, die ihre Operandenregister als Stapelspeicher verwaltet. Eine zweistellige Operation beispielsweise verknüpft die beiden obersten Stackelemente miteinander und speichert das Ergebnis als oberstes Element wieder ab.
Wahr oder falsch?\nBei der direkten Adressierung besteht der Operand aus der Adresse des zu verarbeitenden Datums.;Die Aussage ist richtig. Bei der direkten oder absoluten Adressierung steht im Befehlswort hinter dem OpCode die Adresse der Speicherzelle mit dem zu verarbeitenden Datum.
Wahr oder falsch?\nBei der unmittelbaren Adressierung besteht der Operand aus dem zu verarbeitendem Datum.;Die Aussage ist richtig. Bei der unmittelbaren Adressierung (immediate) steht im Befehlswort hinter dem OpCode der Operand direkt als Konstante.
Wahr oder falsch?\nBei der indirekten Adressierung besteht der Operand aus der Adresse des zu verarbeitenden Datums.;Die Aussage ist falsch. Bei einer indirekten und damit zweistufigen Adressierung besteht der Operand aus einer Adresse, unter der sich die Adresse des tatsächlichen zu verarbeitenden Datums befindet.
Wahr oder falsch?\nBei einer indizierten Adressierung sind die Operanden durch zwei Registerinhalte gegeben, wobei sich die effektive Adresse als Modulo-2-Summe dieser beiden Registerinhalte ergibt.;Die Aussage ist falsch. Bei einer indizierten Adressierung errechnet sich die effektive Adresse zwar als Summe zweier Registerinhalte, es handelt sich jedoch nicht um eine Modulo-2-Summe.
Wahr oder falsch?\nSchiebebefehle sind notwendig, um Daten im Speicher und zwischen Speicher und Registern zu verschieben.;Die Aussage ist falsch. Schiebebefehle manipulieren Registerinhalte, indem diese auf Bitebene „nach links“ oder „nach rechts“ verschoben und entsprechend mit 1 oder 0 aufgefüllt werden.
Wahr oder falsch?\nBefehle im Dreiadressformat sind aufgrund ihres zusätzlichen Operandenfeldes grundsätzlich länger als Befehle im Zweiadressformat, wodurch Programme im Dreiadressformat auch immer mehr Speicherplatz als Programme im Zweiadressformat benötigen.;Die Aussage ist falsch. Das zusätzliche Operandenfeld muss nicht zwingend zu einer größeren Befehlslänge führen. Durch einen kürzeren Opcode oder kürzere Operandenbezeichner kann ein Dreiadressbefehl einer Architektur A kürzer sein als ein Zweiadressbefehl einer Architektur B.
Wahr oder falsch?\nBei der Assembler-Programmierung zeigen die Direktiven .data und .text an, dass sich in den nachfolgenden Speicherbereichen Daten bzw. Programmcode findet.;Die Aussage ist richtig. Allerdings sind die Assembler-Direktiven Anweisungen an den Assembler, wie das Programm beim Übersetzen zu segmentieren ist. Im übersetzen Maschinenprogramm sind die Direktiven nicht mehr vorhanden.
Wahr oder falsch?\nRISC-Architekturen zeichnen sich durch wenige, wichtige Befehle und Befehlsformate aus.;Die Aussage ist richtig Der Befehlssatz einer RISC-Architektur besteht aus nur wenigen, unbedingt notwendigen Befehlen um eine einfache Realisierung des Steuerwerks zu ermöglichen und damit Chip-Fläche zu sparen.
Wahr oder falsch?\nWichtige Voraussetzung für eine effiziente Implementierung einer RISCArchitektur ist die Verfügbarkeit preiswerter Speichertechnologie.;Die Aussage ist richtig. Der Befehlssatz einer RISC-Architektur besteht aus nur wenigen, unbedingt notwendigen Befehlen. Dadurch werden zur Realisierung komplexer Funktionen mehr Befehle und damit wird gegenüber der CISC-Architektur mehr Speicherplatz benötigt.
Wahr oder falsch?\nCISC-Architekturen zeichnen sich durch umfangreiche Befehlssätze und mächtige Maschinenbefehle mit vielen Befehlsformaten aber wenigen Adressierungsarten aus.; Die Aussage ist falsch. CISC-Architekturen zeichnen sich durch umfangreiche Befehlssätze, mächtige Maschinenbefehle mit vielen Befehlsformaten und vielen Adressierungsarten aus.
Wahr oder falsch?\nSowohl bei CISC- als auch bei RISC-Architekturen erfolgt die Parameterübergabe bei Unterprogrammaufrufen in der Regel über einen Stackspeicher (d.h. LIFO), der innerhalb des Hauptspeichers angelegt wird.;Die Aussage ist richtig. Die Parameterübergabe bei Unterprogrammaufrufen als auch die Sicherung von Registern und Prozessorstatus erfolgt in der Regel über den Laufzeitstack oder Kellerspeicher innerhalb des Haupt- bzw. Cachespeichers.
Wahr oder falsch?\nEin skalarer RISC-Prozessor beschleunigt die Befehlsverarbeitung, indem der mehrere Befehle gleichzeitig an mehrere Ausführungseinheiten zuordnet.;Die Aussage ist falsch. Diese Eigenschaft trifft auf einen superskalaren RISC-Prozessor zu.
Wahr oder falsch?\nRISC-Architekturen kommen gegenüber CISC-Architekturen mit weniger Chip-Fläche auf dem Prozessor aus.;Die Aussage ist richtig. Wegen der geringeren Anzahl an Befehlen, Befehlsformaten, Adressierungsarten und der einheitlichen Befehlslänge wird die Implementierung des Steuerwerks bei RISC-Architekturen vereinfacht und damit Chip-Fläche eingespart.
Wahr oder falsch?\nCISC-Architekturen werden wegen der Vielzahl an Adressierungsarten und der daraus resultierenden Möglichkeiten Operanden und Daten zu laden und zu speichern auch LOAD/STORE-Architekturen genannt.;Die Aussage ist falsch. Als LOAD/STORE-Architektur bezeichnet man eine RISC-Architektur, da dort nur über Lade-/Speicherbefehle auf den Speicher zugegriffen wird.
Wahr oder falsch?\nWegen des kleineren Befehlssatzes bei RISC-Architekturen wird dort grundsätzlich mehr Speicherplatz für die Unterbringung von Programmen benötigt.;Die Aussage ist richtig. Wegen des kleineren Befehlssatzes und der daraus resultierenden weniger komplexeren Befehle werden zur Implementierung eines Programmes auf einer RISC-Architektur mehr Befehle und damit mehr Speicherplatz benötigt.